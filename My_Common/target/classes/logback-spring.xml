<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <springProperty scope="context" name="appName" source="spring.application.name" defaultValue="log"/>
    <property name="log.path" value="./log"/>
    <property name="log.charset" value="UTF-8"/>
    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"/>

    <!-- INFO -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.path}/${appName}-info.log</File>
        <!-- 根据时间来制定滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${log.path}/${appName}-info.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <!-- 日志文件最大值 -->
            <MaxFileSize>100MB</MaxFileSize>
            <!--日志体量上线，超出删除旧的日志-->
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
        <encoder>
            <Pattern>${log.pattern}</Pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!-- ERROR ，单独打印错误日志方便排查-->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.path}/${appName}-error.log</File>
        <!-- 根据时间来制定滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${log.path}/${appName}-error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!-- 日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <!-- 日志文件最大值 -->
            <MaxFileSize>100MB</MaxFileSize>
            <!--日志体量上线，超出删除旧的日志-->
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
        <encoder>
            <Pattern>${log.pattern}</Pattern>
            <charset>${log.charset}</charset>
        </encoder>
        <!--过滤，只打印ERROR日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- Console -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!--mybatis sql日志是DEBUG级别-->
    <logger name="com.fh.mapper" level="DEBUG" additivity="false">
        <appender-ref ref="FILE_INFO"/>
        <appender-ref ref="STDOUT"/>
    </logger>

    <!-- 当前日志总级别为TRACE、DEBUG、INFO、WARN、ERROR、ALL和 OF -->
    <!-- the level of the root level is set to DEBUG by default. -->
    <root level="INFO">
        <appender-ref ref="FILE_INFO"/>
        <appender-ref ref="FILE_ERROR"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>